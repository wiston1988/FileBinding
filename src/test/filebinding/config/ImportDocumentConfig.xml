<?xml version="1.0" encoding="UTF-8"?>
<docmapping>

	<description>Import configuration</description>


	<!--  If there is no "formatStr" configuration in the field. This will set as default. Date field will use dateFormat. Number field will use numberFormat.-->
	<property name="dateFormat" value="MM/dd/yyyy" />
	<property name="numberFormat" value="12" />
	
	
	<!--if a column/Field not config the parser, it will use auto-field parser . Use canconvert function in the parsers to choose on parser-->
	<auto-fieldParser>
		<value>filebinding.parsers.IntegerParser</value> <!-- can also use java name without package name -->
	</auto-fieldParser>
	
	<classConfig>
		<!-- Parse Strategy  -->
		<class name="DefaultParsingStrategy" value="com.netease.filebinding.core.strategy.base.DefaultParsingStrategy"/>
		<!-- 
		<class name="TextParsingStrategy" value="filebinding.strategy.TextImportStrategy"/>
		 -->
		 <class name="TextParsingStrategy" value="com.netease.filebinding.core.strategy.base.template.SubstrParsingStrategy"/>
		<class name="ImportStrategy" value="filebinding.strategy.ImportStrategy"/>
		<class name="AdvancedImportStrategy" value="filebinding.strategy.AdvancedImportStrategy"/>
		<!--Bean model for parsing -->
		<class name="Teacher" value="filebinding.model.Teacher"/>
		<class name="AdvancedBean" value="filebinding.model.AdvancedBean"/>
		<!-- The field/column parser -->
		<class name="IntegerParser" value="filebinding.parsers.IntegerParser"/>
		<class name="ToUpperCaseParser" value="filebinding.parsers.ToUpperCaseParser"/>
		<class name="ToBigDecimalParserThrowE" value="filebinding.parsers.ToBigDecimalParserThrowE"/>
		<class name="ToLongParserThrowE" value="filebinding.parsers.ToLongParserThrowE"/>	
		<class name="ToStringParserThrowE" value="filebinding.parsers.ToStringParserThrowE"/>
		<class name="AdvancedDateParser" value="filebinding.parsers.AdvancedDateParser"/>
	</classConfig>
	
	<record tag="[TestImport]" class="Teacher" parser="ImportStrategy" ignoreerror="true">
		<mapping-field name="student.studentName">
			<bind-to-column groupname="studentName"><!-- If groupname is not setup, the first column valye will be groupname -->
				<value>studentName</value>
				<value>student name</value>
			</bind-to-column>
		</mapping-field>
		<mapping-field name="name" bind-to-column="name" parser="ToUpperCaseParser"/>
		<mapping-field name="age" bind-to-column="age" />
	</record>
	
	
	<record tag="[AdvancedImport]" class="AdvancedBean" parser="AdvancedImportStrategy" ignoreerror="false" dateFormat="yyyyMMdd" numberFormat="5">
		<!-- required default is false. formatStr is not mandatory; if it is specified,the logic should be implemented in parser, here means mxlength. -->
		<mapping-field name="upperCaseField" bind-to-column="UpperCase Column" required="true" parser="ToUpperCaseParser" formatStr="20"/>
		<mapping-field name="stringParserThrowEField" bind-to-column="StringParserThrowE Column" parser="ToStringParserThrowE" formatStr="30"/>
		<!-- Here formatStr should be date format String which used in parser AdvancedDateParser . -->
		<mapping-field name="advancedDateField" bind-to-column="Date Column" required="true" formatStr="MM/dd/yyyy;yyyyMMdd" parser="AdvancedDateParser"/>
		<mapping-field name="longField" bind-to-column="Long Column" parser="ToLongParserThrowE" formatStr="12"/>
		<!-- Here formatStr should be java pattern which used in parser ToBigDecimalParserThrowE . -->
		<mapping-field name="bigDecimalField" bind-to-column="BigDecimal Column" parser="ToBigDecimalParserThrowE" formatStr="^-?\d{1,3}(\.\d{0,5})?$"/>
	</record>
	
	<record tag="[ImportWithoutBindingColumn]" class="Teacher" parser="DefaultParsingStrategy" ignoreerror="true">
		<mapping-field name="student.studentName"/>
		<mapping-field name="name"/>
		<mapping-field name="age"/>
	</record>

	<record tag="[ImportTextFile]" class="Teacher" parser="TextParsingStrategy" >
		<mapping-field name="student.studentName" bind-to-column="0,20"/>
		<mapping-field name="name" bind-to-column="20,40"/>
		<mapping-field name="age" bind-to-column="40,43"/>
	</record>
</docmapping>